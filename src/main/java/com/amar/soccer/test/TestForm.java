/*
 * TestForm.java
 * Created on __DATE__, __TIME__
 */

package com.amar.soccer.test;

import java.util.List;

import com.amar.soccer.test.android.AndroidShell;
import com.amar.soccer.test.android.CallBack;
import com.amar.soccer.test.android.TestRecordReceiver;
import com.amar.soccer.test.android.event.AndroidEvent;

/**
 *
 * @author  __USER__
 */
public class TestForm extends javax.swing.JPanel
{

	private static final long serialVersionUID = - 6123222293657823872L;

	/** Creates new form TestForm */
	public TestForm()
	{
		initComponents();

		if ( deviceComboBox.getItemCount() > 0 )
		{
			deviceComboBox.removeAllItems();
		}
		deviceComboBox.addItem( noDevice );
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents()
	{

		recordButton = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		infoTextArea = new javax.swing.JTextArea();
		startButton = new javax.swing.JButton();
		deviceComboBox = new javax.swing.JComboBox();
		findButton = new javax.swing.JButton();
		useOldTestScriptButton = new javax.swing.JButton();
		clearInfoButton = new javax.swing.JButton();
		saveTestScriptButton = new javax.swing.JButton();

		recordButton.setText( "\u5f55\u5236\u65b0\u811a\u672c" );
		recordButton.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseReleased( java.awt.event.MouseEvent evt )
			{
				recordButtonMouseReleased( evt );
			}
		} );

		infoTextArea.setColumns( 20 );
		infoTextArea.setRows( 5 );
		jScrollPane1.setViewportView( infoTextArea );

		startButton.setText( "\u5f00\u59cb\u6d4b\u8bd5" );
		startButton.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseReleased( java.awt.event.MouseEvent evt )
			{
				startButtonMouseReleased( evt );
			}
		} );

		deviceComboBox.setModel( new javax.swing.DefaultComboBoxModel( new String [] { "Item 1", "Item 2", "Item 3", "Item 4" } ) );

		findButton.setText( "\u67e5\u627e\u8bbe\u5907" );
		findButton.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseReleased( java.awt.event.MouseEvent evt )
			{
				findButtonMouseReleased( evt );
			}
		} );
		findButton.addActionListener( new java.awt.event.ActionListener()
		{
			public void actionPerformed( java.awt.event.ActionEvent evt )
			{
				findButtonActionPerformed( evt );
			}
		} );

		useOldTestScriptButton.setText( "\u4f7f\u7528\u65e7\u7684" );
		useOldTestScriptButton.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseReleased( java.awt.event.MouseEvent evt )
			{
				useOldTestScriptButtonMouseReleased( evt );
			}
		} );

		clearInfoButton.setText( "\u6e05\u7a7a" );
		clearInfoButton.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseReleased( java.awt.event.MouseEvent evt )
			{
				clearInfoButtonMouseReleased( evt );
			}
		} );

		saveTestScriptButton.setText( "\u4fdd\u5b58\u811a\u672c" );
		saveTestScriptButton.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseReleased( java.awt.event.MouseEvent evt )
			{
				saveTestScriptButtonMouseReleased( evt );
			}
		} );

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout( this );
		this.setLayout( layout );
		layout.setHorizontalGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING ).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING ,
				layout.createSequentialGroup()
						.addGroup(
								layout.createParallelGroup( javax.swing.GroupLayout.Alignment.TRAILING )
										.addGroup(
												layout.createSequentialGroup()
														.addContainerGap()
														.addGroup(
																layout.createParallelGroup( javax.swing.GroupLayout.Alignment.TRAILING )
																		.addComponent( jScrollPane1 , javax.swing.GroupLayout.Alignment.LEADING , javax.swing.GroupLayout.DEFAULT_SIZE , 389 ,
																				Short.MAX_VALUE )
																		.addGroup(
																				layout.createSequentialGroup()
																						.addGroup(
																								layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING , false )
																										.addComponent( findButton , javax.swing.GroupLayout.DEFAULT_SIZE ,
																												javax.swing.GroupLayout.DEFAULT_SIZE , Short.MAX_VALUE )
																										.addComponent( recordButton , javax.swing.GroupLayout.DEFAULT_SIZE ,
																												javax.swing.GroupLayout.DEFAULT_SIZE , Short.MAX_VALUE ) )
																						.addGap( 7 , 7 , 7 )
																						.addGroup(
																								layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
																										.addGroup(
																												javax.swing.GroupLayout.Alignment.TRAILING ,
																												layout.createSequentialGroup()
																														.addComponent( saveTestScriptButton )
																														.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED , 34 ,
																																Short.MAX_VALUE ).addComponent( useOldTestScriptButton )
																														.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.UNRELATED )
																														.addComponent( startButton ) )
																										.addComponent( deviceComboBox , 0 , 289 , Short.MAX_VALUE ) ) ) ) )
										.addComponent( clearInfoButton ) ).addGap( 30 , 30 , 30 ) ) );
		layout.setVerticalGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING ).addGroup(
				layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								layout.createParallelGroup( javax.swing.GroupLayout.Alignment.BASELINE )
										.addComponent( deviceComboBox , javax.swing.GroupLayout.PREFERRED_SIZE , javax.swing.GroupLayout.DEFAULT_SIZE , javax.swing.GroupLayout.PREFERRED_SIZE )
										.addComponent( findButton ) )
						.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED )
						.addGroup(
								layout.createParallelGroup( javax.swing.GroupLayout.Alignment.BASELINE ).addComponent( recordButton ).addComponent( startButton ).addComponent( useOldTestScriptButton )
										.addComponent( saveTestScriptButton ) ).addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED )
						.addComponent( jScrollPane1 , javax.swing.GroupLayout.DEFAULT_SIZE , 173 , Short.MAX_VALUE ).addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED )
						.addComponent( clearInfoButton ).addContainerGap() ) );
	}// </editor-fold>
	//GEN-END:initComponents

	private void useOldTestScriptButtonMouseReleased( java.awt.event.MouseEvent evt )
	{
		// TODO add your handling code here:
	}

	private void clearInfoButtonMouseReleased( java.awt.event.MouseEvent evt )
	{
		infoTextArea.setText("");
	}

	private void saveTestScriptButtonMouseReleased( java.awt.event.MouseEvent evt )
	{
		testRecordReceiver.saveRecord();
		testRecordReceiver.stop();
		testRecordReceiver = null;
		
	}

	private void findButtonActionPerformed( java.awt.event.ActionEvent evt )
	{
		// TODO add your handling code here:
	}

	private void startButtonMouseReleased( java.awt.event.MouseEvent evt )
	{
	}

	String chooseDevicePlease = "请选择设备";

	String noDevice = "没有设备";

	private void findButtonMouseReleased( java.awt.event.MouseEvent evt )
	{
		AndroidShell androidShell = new AndroidShell();
		List<String> devices = androidShell.getDevices();

		if ( deviceComboBox.getItemCount() > 0 )
		{
			deviceComboBox.removeAllItems();
		}

		deviceComboBox.addItem( chooseDevicePlease );
		if ( devices != null && devices.size() > 0 )
			for( String device : devices )
			{
				deviceComboBox.addItem( device );
			}
	}

	boolean isRecord = false;
	
	TestRecordReceiver testRecordReceiver;

	private void recordButtonMouseReleased( java.awt.event.MouseEvent evt )
	{
		if ( isRecord )
		{
			testRecordReceiver.stop();
			testRecordReceiver = null;
			recordButton.setText( "开始录制" );
			isRecord = false;
		}
		else
		{
			String device = deviceComboBox.getSelectedItem().toString();
			if ( device.equals( chooseDevicePlease ) || device.equals( noDevice ) )
			{
				infoTextArea.setText( chooseDevicePlease );
				return;
			}
			isRecord = true;
			recordButton.setText( "停止录制" );

			testRecordReceiver = new TestRecordReceiver( device );

			testRecordReceiver.setUiCallBack( new CallBack<AndroidEvent>()
			{

				@Override
				public void callback( AndroidEvent t )
				{
					infoTextArea.setText( infoTextArea.getText() + "\n" + t.toString() );
				}

			} );

			testRecordReceiver.start();
		}
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton clearInfoButton;

	private javax.swing.JComboBox deviceComboBox;

	private javax.swing.JButton findButton;

	private javax.swing.JTextArea infoTextArea;

	private javax.swing.JScrollPane jScrollPane1;

	private javax.swing.JButton recordButton;

	private javax.swing.JButton saveTestScriptButton;

	private javax.swing.JButton startButton;

	private javax.swing.JButton useOldTestScriptButton;
	// End of variables declaration//GEN-END:variables

}
